<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ajax promise on Angela Fang&#39;s Blog</title>
    <link>http://angelafang.top/tags/ajax-promise/</link>
    <description>Recent content in ajax promise on Angela Fang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 29 Jan 2020 22:02:05 +0800</lastBuildDate>
    
	<atom:link href="http://angelafang.top/tags/ajax-promise/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>由Ajax引起的</title>
      <link>http://angelafang.top/2020/%E7%94%B1ajax%E5%BC%95%E8%B5%B7%E7%9A%84/</link>
      <pubDate>Wed, 29 Jan 2020 22:02:05 +0800</pubDate>
      
      <guid>http://angelafang.top/2020/%E7%94%B1ajax%E5%BC%95%E8%B5%B7%E7%9A%84/</guid>
      <description>目录： ajax
跨域
promise
axios
localStorage 等
其他
ajax：Async Javascript And Xml 一般来说请求和响应是浏览器发给服务器的。AJAX 是浏览器上的功能。浏览器在 window 上加了一个 XMLHttpRequest 函数，用这个构造函数（类）可以构造出一个对象，js 通过它发起请求以及接收响应。
使用 ajax 发送请求，分为四步：
第一步创建 XMLHttpRequest 对象， 第二步调用对象的 open 方法,open 方法里要传入请求的路径以及方法 第三步监听对象的 onreadystatechange 事件,在事件处理函数中进行操作 第四步调用对象的 send 方法（发送请求，这里可以上传数据）
var request = new XMLHttpRequest(); request.open(method,url); request.onreadyStateChange = ()=&amp;gt;{}; request.send();  跨域（CORS,JSONP） 浏览器有同源策略的限制。同源指的是协议，地址，端口号相同。该限制会导致如果一个浏览器去向服务器发起请求，若发起请求的地址和要请求的地址不同源，该请求会被拒绝。那么 ajax 请求就也受到这种限制，那么如何处理？一般采取两种手段，CORS 和 JSONP。
CORS 就是在服务器端进行设置，设置响应头 Access-Control-Allow-Origin 将允许跨域访问的网址添加进去。具体文档都在 MDN 上。
但是 IE 浏览器不支持 CORS，这时就使用 JSONP。JSONP 和 JSON 没有任何关系，JSON 就是一门标记性语言。JSONP 是利用了浏览器对于 js 文件的请求没有限制，使用 script 标签等带有 src 属性的标签去发起请求，请求一个 js 文件。该 js 文件会执行一个回调，里面有我们想要的数据。一般回调函数的名字是随机生成的，以 callback 参数的形式传递过去。JSONP 好处是兼容 IE，可以跨域，但是它只支持 get 请求，不支持 post 请求。而且 jsonp 不像 ajax 那样，可以获得请求返回的状态码，jsonp 只知道成功或者失败，也不知道响应头。</description>
    </item>
    
  </channel>
</rss>