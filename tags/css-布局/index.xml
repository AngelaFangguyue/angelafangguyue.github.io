<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css 布局 on Angela Fang&#39;s Blog</title>
    <link>http://angelafang.top/tags/css-%E5%B8%83%E5%B1%80/</link>
    <description>Recent content in css 布局 on Angela Fang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 29 Apr 2020 15:54:42 +0800</lastBuildDate>
    
	<atom:link href="http://angelafang.top/tags/css-%E5%B8%83%E5%B1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>移动端适配解决方案</title>
      <link>http://angelafang.top/2020/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 29 Apr 2020 15:54:42 +0800</pubDate>
      
      <guid>http://angelafang.top/2020/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>vm或rem方案本质： vw 或 rem 的方案本质是布局等比例的缩放，让页面在不同尺寸的屏幕下有类似于矢量图片缩放的效果，即保证页面各元素之间位置尺寸的比例关系，并让元素可以清晰地展现。 传统的响应式布局px 但对于文本内容较多，希望引导用户沉浸浏览的页面，并不推荐完全使用等比缩放的方案，对于文本内容还是应该直接使用 px 这种绝对长度单位。毕竟在大屏手机上用户希望看到的是更多的内容而不是更大的内容，实际上很多这类的网站也确实是直接使用 px 结合 flex 等布局方式进行移动端适配的。
并不是说移动端就一定要使用相对长度单位，传统的响应式布局依然是很好的选择，尤其在新闻，社区等可阅读内容较多的场景直接使用 px 单位可以营造更好地体验。px 方案可以让大屏幕手机展示出更多的内容，更符合人们的阅读习惯。如果在这种情形下使用 rem 方案，就会导致在大屏幕上，字体相对应也会变大，体验不好，也达不到展示更多的内容的效果。
移动端适配，要先加上 meta vp 的标签。一种是使用百分比，px，媒体查询，还有 vw，vh。
rem 的使用，就是设定 html 的 font-size。rem 的原理是对不同的屏幕分成相同的份数，这就使得每个元素在不同的屏幕上占据的比例是相同的。vw 也是这样的原理。
使用 vw 方案的时候，一般需要再加上 rem。在实际开发中把 vw 融入到现有的移动端适配方案中，只修改 html 元素 font-size 的方案对于已经在使用 rem 方案的同学来说改动的成本并不大，只需要在原本的 media query 里(或 js 生成 style 时)在 font-size: *px 后面加上 font-size: *vw 就可以了，如需限制布局宽度则需多加一点判断。参考文章:rem, vw, 还是&amp;hellip;? 各凭本事的移动端适配方案
一般来说使用 px 转为 vw、vh 再加上媒体查询就可以应付 99%的移动端适配了，但偶尔会有个别情况需要使用媒体查询适配小屏分辨率，参考文章:【移动端适配】用 vw、vh ＋媒体查询打造最完美的移动端适配方案</description>
    </item>
    
  </channel>
</rss>