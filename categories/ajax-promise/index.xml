<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ajax promise on Angela Fang&#39;s Blog</title>
    <link>http://angelafang.top/categories/ajax-promise/</link>
    <description>Recent content in ajax promise on Angela Fang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 29 Jan 2020 22:02:05 +0800</lastBuildDate>
    
	<atom:link href="http://angelafang.top/categories/ajax-promise/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ajax封装以及Promise</title>
      <link>http://angelafang.top/2020/ajax%E5%B0%81%E8%A3%85vv%E4%BB%A5%E5%8F%8Apromise/</link>
      <pubDate>Wed, 29 Jan 2020 22:02:05 +0800</pubDate>
      
      <guid>http://angelafang.top/2020/ajax%E5%B0%81%E8%A3%85vv%E4%BB%A5%E5%8F%8Apromise/</guid>
      <description>ajax ajax：Async Javascript And Xml 一般来说请求和响应是浏览器发给服务器的。AJAX是浏览器上的功能。浏览器在window上加了一个XMLHttpRequest函数，用这个构造函数（类）可以构造出一个对象，js通过它发起请求以及接收响应。 使用ajax发送请求，分为四步： 第一步创建XMLHttpRequest对象， 第二步调用对象的open方法,open方法里要传入请求的路径以及方法 第三步监听对象的onreadystatechange事件,在事件处理函数中进行操作 第四步调用对象的send方法（发送请求） var request = new XMLHttpRequest(); request.open(method,url); request.onreadyStateChange = ()=&amp;gt;{}; request.send();
1》闭包 什么是闭包，闭包的用途是什么，闭包的缺点是什么？
闭包：能够读取其他函数内部变量的函数，在js中，只有定义在函数内部的子函数才能够读取局部变量，因此把闭包理解成一个定义在函数内部的函数。可以把它看作是连接函数内部和函数外部的桥梁。【使用了外部的变量】
用途：就是读取函数内部变量，使得变量的值一直保存在内存中。 【隐藏局部变量，暴露操作函数 举例：
const createAdd = ()=&amp;gt;{ let n = 0 return ()=&amp;gt;{ n += 1 console.log(n) } } const add = createAdd() add() // 1 add() // 2  】
缺点：由于变量一直保存在内存中，会导致内存消耗大，使得网页性能低下。所以在退出函数之前，将不使用的局部变量全部删除。而且由于它能够在父函数外部改变内部变量的值，使得数据不安全。【容易内存泄漏】 代码举例：
function addAge(){ let age = 21; return function(){ age++; console.log(age); } } const closure = addAge; closure(); closure()();  请理解下面的两个例子，另外注意this！！！</description>
    </item>
    
  </channel>
</rss>